<?php

namespace App\Controller;

use App\Entity\Product;
use App\Entity\Document;
use App\Form\ProductType;
use App\Service\FileUploader;
use App\EventListener\BrochureUploadListener;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;

class ProductController extends AbstractController
{
    //https://symfony.com/doc/current/controller/upload_file.html méthode 1 fonctionne pas
    /**
     * @Route("/produit/nouveau", name="app_product_new")
     */
   /**public function new(Request $request, BrochureUploadListener $brochureListener)
    {
        $product = new Product();
        $form = $this->createForm(ProductType::class, $product);
        $form->handleRequest($request);

        var_dump($product);
        if ($form->isSubmitted() && $form->isValid()) {   
           // $file = $product->getBrochure();
            //$fileName = $brochureListener->upload($file);
           // $product->setBrochure(new File($this->getParameter('brochures_directory').'/'.$product->getBrochure()));
           $brochureListener->prePersist($product);
           $brochureListener->postLoad($product);
          // $brochureListener->uploadFile($product);
            return $this->redirect($this->generateUrl('app_product_list'));
        }

        return $this->render('product/new.html.twig', [
            'form' => $form->createView(),
        ]);
    }*/

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    //https://symfony.com/doc/2.1/cookbook/doctrine/file_uploads.html méthode 2 fonctionne pas

    /**
     * @Route("/produit/nouveau", name="app_product_new")
     */
    public function upload(Request $request,ObjectManager $manager){
        $document = new Document();

        $form = $this->createFormBuilder($document)
        ->add('name')
        ->add('file')
        ->getForm();

      
            
            if ($form->isSubmitted() && $form->isValid()) {
               
                //$document->upload();
                $manager->persist($document);
                $manager->flush();
    
                return $this->redirectToRoute('home');
            }
        

        return $this->render('product/new.html.twig', [
            'form' => $form->createView(),
        ]);
    }

}
